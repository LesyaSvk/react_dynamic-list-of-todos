{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoModal","todos","selectedTodoId","clear","useState","user","setUser","currentTodo","find","todo","id","currentUserId","userId","useEffect","recivedUser","type","onClick","title","completed","href","name","TodoList","selectToDo","map","classNames","TodoFilter","query","setQuery","setFilter","onChange","event","target","value","placeholder","style","pointerEvents","App","setTodos","toDoId","setTodoId","filter","a","todosArr","visibleTodos","toLowerCase","includes","toLocaleLowerCase","length","ReactDOM","render","document","getElementById"],"mappings":"oQAYA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,I,OClBMC,EAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCONC,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,MAEA,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAcN,EAAMO,MAAK,SAAAC,GAAI,OAAIA,EACpCC,KAAOR,KACJS,GAA2B,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAaK,SAAU,EAS7C,OAPAC,qBAAU,WFCW,IAACD,KEAZD,EFA+BxB,EAAG,iBAAiByB,KECxDlB,MAAK,SAAAoB,GACJR,EAAQQ,QAEX,CAACZ,IAGF,sBAAKH,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbM,EAGA,sBAAKN,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYG,KAIZ,wBACEa,KAAK,SACLhB,UAAU,SACV,UAAQ,cACRiB,QAASb,OAIb,sBAAKJ,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGQ,QADH,IACGA,OADH,EACGA,EAAaU,QAGhB,oBAAGlB,UAAU,QAAQ,UAAQ,aAA7B,UACc,OAAXQ,QAAW,IAAXA,KAAaW,UAEV,wBAAQnB,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGH,OAED,mBAAGoB,KAAK,2BAAR,SACGd,EAAKe,gBApCd,cAAC,EAAD,QCtBKC,EAA4B,SAAC,GAKnC,IAJLpB,EAII,EAJJA,MACAC,EAGI,EAHJA,eACAoB,EAEI,EAFJA,WACAnB,EACI,EADJA,MAEA,OACE,qCACE,wBAAOJ,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGE,EAAMsB,KAAI,SAAAd,GACT,IAAQC,EAAyBD,EAAzBC,GAAIO,EAAqBR,EAArBQ,MAAOC,EAAcT,EAAdS,UAEnB,OACE,qBACE,UAAQ,OAERnB,UAAWyB,IAAW,CACpB,4BAA6BtB,IAAmBQ,IAJpD,UAOE,oBAAIX,UAAU,eAAd,SAA8BW,IAC9B,oBAAIX,UAAU,eAAd,SACGmB,GACC,sBAAMnB,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWyB,IAAW,CACpB,mBAAoBN,EACpB,mBAAoBA,IAHxB,SAMGD,MAGL,oBAAIlB,UAAU,8BAAd,SACGG,IAAmBQ,EAClB,wBACE,UAAQ,eACRX,UAAU,SACVgB,KAAK,SACLC,QAAS,WACPM,EAAW,IALf,SAQE,sBAAMvB,UAAU,OAAhB,SACE,mBAAGA,UAAU,yBAIjB,wBACE,UAAQ,eACRA,UAAU,SACVgB,KAAK,SACLC,QAAS,WACPM,EAAWZ,IALf,SAQE,sBAAMX,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBA/ChBW,WA0DK,IAAnBR,GACC,cAAC,EAAD,CACED,MAAOA,EACPC,eAAgBA,EAChBC,MAAOA,QC/FJsB,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEA,OACE,uBAAM7B,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACR8B,SAAU,SAACC,GAAD,OAAWF,EAAUE,EAAMC,OAAOC,QAF9C,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGjC,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRgB,KAAK,OACLhB,UAAU,QACVkC,YAAY,YACZD,MAAON,EACPG,SAAU,SAACC,GAAD,OAAWH,EAASG,EAAMC,OAAOC,UAE7C,sBAAMjC,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGd2B,GACC,sBAAM3B,UAAU,gBAAgBmC,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRpB,KAAK,SACLhB,UAAU,SACViB,QAAS,kBAAMW,EAAS,gBCrCzBS,EAAgB,WAC3B,MAA0BhC,mBAAiB,IAA3C,mBAAOH,EAAP,KAAcoC,EAAd,KACA,EAA4BjC,mBAAiB,GAA7C,mBAAOkC,EAAP,KAAeC,EAAf,KACA,EAA0BnC,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KACA,EAA4BvB,mBAAS,OAArC,mBAAOoC,EAAP,KAAeZ,EAAf,KAEMzB,EAAK,uCAAG,sBAAAsC,EAAA,sEACNF,EAAU,GADJ,2CAAH,qDAIX1B,qBAAU,WLAkB1B,EAAY,UKEnCO,MAAK,SAAAgD,GACJL,EAASK,QAEZ,IAEH,IAAMC,EAAe1C,EAAMuC,QAAO,SAAA/B,GAChC,QAAgB,WAAX+B,GAAuB/B,EAAKS,WAClB,cAAXsB,IAA2B/B,EAAKS,YAI7BT,EAAKQ,MAAM2B,cACfC,SAASnB,EAAMoB,wBAGpB,OACE,mCACE,qBAAK/C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACE2B,MAAOA,EACPC,SAAUA,EACVC,UAAWA,MAIf,qBAAK7B,UAAU,QAAf,SACoB,IAAjBE,EAAM8C,OACH,cAAC,EAAD,IAEA,cAAC,EAAD,CACE9C,MAAO0C,EACPzC,eAAgBoC,EAChBhB,WAAY,SAACZ,GAAD,OAAgB6B,EAAU7B,IACtCP,MAAOA,gBC1D3B6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ba0e764.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number | null,\n  clear: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  clear,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = todos.find(todo => todo\n    .id === selectedTodoId);\n  const currentUserId = currentTodo?.userId || 0;\n\n  useEffect(() => {\n    getUser(currentUserId)\n      .then(recivedUser => {\n        setUser(recivedUser);\n      });\n  }, [selectedTodoId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clear}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number | null,\n  selectToDo: (id: number) => void,\n  clear: () => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectToDo,\n  clear,\n}) => {\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => {\n            const { id, title, completed } = todo;\n\n            return (\n              <tr\n                data-cy=\"todo\"\n                key={id}\n                className={classNames({\n                  'has-background-info-light': selectedTodoId === id,\n                })}\n              >\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames({\n                      'has-text-danger': !completed,\n                      'has-text-success': completed,\n                    })}\n                  >\n                    {title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  {selectedTodoId === id ? (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        selectToDo(0);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    </button>\n                  ) : (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        selectToDo(id);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {selectedTodoId !== 0 && (\n        <TodoModal\n          todos={todos}\n          selectedTodoId={selectedTodoId}\n          clear={clear}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  setFilter: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [toDoId, setTodoId] = useState<number>(0);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  const clear = async () => {\n    await setTodoId(0);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todosArr => {\n        setTodos(todosArr);\n      });\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    if ((filter === 'active' && todo.completed)\n    || (filter === 'completed' && !todo.completed)) {\n      return false;\n    }\n\n    return todo.title.toLowerCase()\n      .includes(query.toLocaleLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={toDoId}\n                    selectToDo={(id: number) => setTodoId(id)}\n                    clear={clear}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}